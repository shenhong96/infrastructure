
- name: Install containerd package
  apt:
    name: containerd
    state: present
    update_cache: yes
  register: install_containerd
  tags: base

- name: Create containerd directory
  file:
    path: /etc/containerd
    state: directory
    mode: 0750

- name: Create containerd config.toml
  file:
    path: /etc/containerd/config.toml
    state: touch
    mode: 0640

- name: Generate containerd config
  command: containerd config default > /etc/containerd/config.toml
  args:
    creates: /etc/containerd/config.toml
#  when: install_containerd.changed
  tags: base

- name: Edit containerd config
  replace:
    path: /etc/containerd/config.toml
    regexp: '^(.*plugins.io.containerd.grpc.v1.cri.containerd.runtimes.runc.options[^\n]*SystemdCgroup = false)'
    replace: '\1 = true'
#    state: present
  tags: base

- name: Uncomment net.ipv4.ip_forward in sysctl.conf
  replace:
    path: /etc/sysctl.conf
    regexp: '^#(net\.ipv4\.ip_forward=1)$'
    replace: '\1'
#    state: present
  tags: base

- name: Create k8s modules file
  copy:
    content: "br_netfilter"
    dest: /etc/modules-load.d/k8s.conf
    owner: root
    group: root
    mode: 0644
  tags: base

#- name: reboot machine
#  command: reboot
#  async: 0
#  poll: 0
#  become: true
#  register: reboot
#  tags: base

#- name: Wait for machine to come back up
#  wait_for:
#    host: "{{ ansible_host }}"
#    port: 22
#    state: started
#    delay: 30
#    timeout: 600
#  when: reboot.rc == 0
#  tags: base

- name: Add Kubernetes apt repository key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
    keyring: /usr/share/keyrings/kubernetes-archive-keyring.gpg

- name: Add kubernetes repository to sources list
  lineinfile:
    path: /etc/apt/sources.list.d/kubernetes.list
    line: "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    create: true
    state: present
  tags: base

- name: Install kubeadm, kubectl, kubelet
  apt:
    name: 
      - kubeadm
      - kubectl
      - kubelet
    state: present
    update_cache: yes
  tags: base

### MASTER
## sudo kubeadm init --control-plane-endpoint=172.16.250.216 --node-name controller --pod-network-cidr=10.244.0.0/16
#- name: Initialize kubeadm
#  kubeadm:
#    cmd: init
#    control_plane_endpoint: 192.168.9.177
#    node_name: k8s-one
#    pod_network_cidr: 10.244.0.0/16
#  register: kubeadm_init
#  tags: master_node
#
#- name: Create .kube directory
#  file:
#    path: "{{ ansible_env.HOME }}/.kube"
#    state: directory
#    mode: 0700
#  tags: base
#
#- name: Copy kubeconfig
#  copy:
#    src: /etc/kubernetes/admin.conf
#    dest: "{{ ansible_env.HOME }}/.kube/config"
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#    mode: 0600
#  tags: base
#
#- name: Change Ownership of config file
#  file:
#    path: "{{ ansible_env.HOME }}/.kube/config"
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#  tags: base
#
#- name: Install Calico using kubectl
#  command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
#  become: true
#  tags: master_node
#
### WORKER
## kubeadm token create --print-join-command
#- name: Join worker nodes to the cluster
#  kubeadm:
#    cmd: join
#    join_command: "{{ kubeadm_init.join_command }}"
#  register: kubeadm_join
#  tags: worker_nodes
#  
#
#
#
#

---
x-monitoring: &loki
  labels:
    logging: "promtail"
    logging_jobname: "containerlogs"

version: '3.5'
networks:
  monitoring:
    name: main-monitoring-stack
services:
  scrutiny:
    container_name: scrutiny
    image: ghcr.io/analogj/scrutiny:master-omnibus
    labels:
      logging: "promtail"
      logging_jobname: "containerlogs"
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    ports:
      - "8080:8080" # webapp
      - "8086:8086" # influxDB admin
    restart: unless-stopped
    volumes:
      - /run/udev:/run/udev:ro
      - ./config:/opt/scrutiny/config
      - ./influxdb:/opt/scrutiny/influxdb
    environment:
      - SCRUTINY_COLLECTOR=true
      - COLLECTOR_CRON_SCHEDULE="0 0 * * *"
    devices:
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
      - "/dev/sde"
      - "/dev/sdf"
      - "/dev/sdg"
      - "/dev/nvme0"
      - "/dev/nvme1"
    <<: *loki

  dash:
    image: mauricenino/dashdot:latest
    restart: unless-stopped
    privileged: true
    ports:
      - '3001:3001'
    volumes:
      - /:/mnt/host:ro
    environment:
      DASHDOT_ENABLE_CPU_TEMPS: 'true'

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - /mnt/storage/appdata/monitoring/prometheus:/prometheus
    command: --web.enable-lifecycle  --config.file=/etc/prometheus/prometheus.yml
    networks:
      - monitoring
    <<: *loki

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: unless-stopped
    networks:
      - monitoring
    <<: *loki

  olivetin:
    image: jamesread/olivetin:2022-04-07
    container_name: olivetin
    user: root
    volumes:
      - ./olivetin:/config
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/sbin/pct:/usr/bin/pct
    ports:
      - "1337:1337"
    restart: always
    <<: *loki

  portainer:
    image: 'cr.portainer.io/portainer/agent'
    container_name: portainer_agent
    ports:
        - '9001:9001'
    restart: always
    volumes:
        - '/var/run/docker.sock:/var/run/docker.sock'
        - '/var/lib/docker/volumes:/var/lib/docker/volumes'
    
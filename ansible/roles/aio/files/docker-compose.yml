---
x-lsio: &lsio
  environment:
    - PUID=1000
    - PGID=1000
    - TZ=Asia/Kuala_Lumpur
x-monitoring: &loki
  labels:
    logging: "promtail"
    logging_jobname: "containerlogs"

version: "2.1"
services:
  homer:
    container_name: homer
    image: b4bz/homer
    environment:
      - INIT_ASSETS=0
    ports:
      - 7777:8080
    volumes:
      - ./homer/config:/www/assets
    restart: always

  homarr:
    container_name: homarr
    image: ghcr.io/ajnart/homarr:latest
    restart: unless-stopped
    volumes:
      - ./homarr/configs:/app/data/configs
      - ./homarr/icons:/app/public/icons
    ports:
      - '9999:7575'

  librespeed:
    image: ghcr.io/linuxserver/librespeed
    container_name: librespeed
    networks:
      - traefik
    <<: *lsio
    volumes:
      - ./librespeed/config:/config
    ports:
      - 82:80
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.librespeed.entrypoints=web"
      - "traefik.http.routers.librespeed.rule=Host(`librespeed.{{ domain_name }}`)"
      - "traefik.http.services.librespeed.loadbalancer.server.port=82"
      - "traefik.docker.network=traefik"

  uptime-kuma:
    container_name: uptime-kuma
    image: 'louislam/uptime-kuma:1'
    ports:
      - '3001:3001'
    volumes:
      - './uptime-kuma:/app/data'
    restart: always
    <<: *loki

  smokeping:
    image: lscr.io/linuxserver/smokeping:latest
    container_name: smokeping
    volumes:
      - ./smokeping/config:/config
      - ./smokeping/data:/data
    ports:
      - 81:80
    restart: unless-stopped
    <<: *loki

  firefox:
    image: lscr.io/linuxserver/firefox:latest
    container_name: firefox
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Kuala_Lumpur
      - FILE__PASSWORD=/run/secret/password
    volumes:
      - ./firefox:/config
    ports:
      - 3309:3000
    shm_size: "2gb"
    restart: unless-stopped
    <<: *loki

  webtop:
    image: lscr.io/linuxserver/webtop:ubuntu-mate
    container_name: webtop
    security_opt:
      - seccomp:unconfined #optional
    volumes:
      - ./webtop:/config
      - /var/run/docker.sock:/var/run/docker.sock #optional
    ports:
      - 1596:3000
    shm_size: "4gb" #optional
    restart: unless-stopped
    <<: *loki

  healthchecks:
    image: lscr.io/linuxserver/healthchecks:latest
    container_name: healthchecks
    environment:
      - PUID=1000
      - PGID=1000
      - SITE_ROOT=https://health.{{ domain_name }}
      - SITE_NAME=Homelab Health Check For Crontab
      - DEFAULT_FROM_EMAIL={{ HC_DEFAULT_EMAIL }}
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_PORT=587
      - EMAIL_HOST_USER={{ HC_DEFAULT_EMAIL }}
      - EMAIL_HOST_PASSWORD={{ HC_DEFAULT_EMAIL_PASS }}
      - EMAIL_USE_TLS=True
      - SUPERUSER_EMAIL={{ HC_SUPERUSER }}
      - SUPERUSER_PASSWORD={{ HC_SUPERUSER_PASS }}
      - REGENERATE_SETTINGS=False #optional
      - SITE_LOGO_URL=https://www.svgrepo.com/show/120975/alarm.svg
      - ALLOWED_HOSTS=["health.{{ domain_name }}","192.168.9.151"] #optional
      - SECRET_KEY={{ HC_SECRET_KEY }} #optional
      - APPRISE_ENABLED=True
    volumes:
      - ./healthcheck:/config
    ports:
      - 8078:8000
    restart: always
    <<: *loki

  gotify:
    image: gotify/server
    container_name: gotify
    ports:
      - 8087:80
    environment:
      - GOTIFY_DEFAULTUSER_PASS=custom
    volumes:
      - "./gotify:/app/data"
    restart: always
    <<: *loki

  olivetin:
    image: jamesread/olivetin:{{ olivetin_ver }}
    container_name: olivetin
    volumes:
      - ./olivetin:/config
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "1337:1337"
    restart: always

############### AUDIOBOOKSHELF ##################
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf
    container_name: audiobookshelf
    ports:
      - 13378:80
    volumes:
      - /mnt/books:/books
      - ./metadata:/metadata
      - ./config:/config
    restart: always
    <<: *loki

#################### PORTAINER #####################
  portainer-ce:
    image: portainer/portainer-ce:{{ portainer_ver }}
    container_name: portainer
    networks:
      - traefik
    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data
    <<: *loki

################# SPEEDTEST GRAFANA STACK ##################
  grafana:
    restart: always
    image: grafana/grafana:6.7.2
    volumes:
      - "./speedtest-grafana/grafana/provisioning:/etc/grafana/provisioning"
    ports:
      - "{{ GRAFANA_PORT }}:3000"
    environment:
      - "GF_SERVER_ROOT_URL=http://localhost"
      - "GF_SECURITY_ADMIN_PASSWORD={{ GRAFA_ADMIN_PASSWORD }}"
      - "GF_AUTH_ANONYMOUS_ENABLED=true"
    depends_on:
      - influxdb

  speedtest:
    image: frdmn/speedtest-grafana:latest
    container_name: speedtest
    environment:
      - "SPEEDTEST_INTERVAL={{ SPEEDTEST_INTERVAL }}"
      - "SPEEDTEST_HOST=local"
    depends_on:
      - influxdb
    restart: always
    <<: *loki

  influxdb:
    restart: always
    image: influxdb:1.8
    ports:
      - "8086:8086"
    volumes:
      - "./speedtest-grafana/influxdb/:/var/lib/influxdb"
    environment:
      - "INFLUXDB_ADMIN_USER={{ INFLUX_DB_ADMIN }}"
      - "INFLUXDB_ADMIN_PASSWORD={{ INFLUX_DB_ADM_PASS }}"
      - "INFLUXDB_DB=speedtest"


############# WALLABAG STACK #################
  wallabag:
    image: wallabag/wallabag:{{ wallabag_ver }}
    restart: unless-stopped
    container_name: wallabag
    environment:
      - MYSQL_ROOT_PASSWORD={{ WALLABAG_MYSQL_ROOT_PASSWORD }}
      - SYMFONY__ENV__DATABASE_DRIVER=pdo_mysql
      - SYMFONY__ENV__DATABASE_HOST=wallabag-db
      - SYMFONY__ENV__DATABASE_PORT=3306
      - SYMFONY__ENV__DATABASE_NAME={{ WALLABAG_DB_NAME }}
      - SYMFONY__ENV__DATABASE_USER={{ WALLABAG_DB_USER }}
      - SYMFONY__ENV__DATABASE_PASSWORD={{ WALLABAG_DB_PASS }}
      - SYMFONY__ENV__DATABASE_CHARSET=utf8mb4
      - SYMFONY__ENV__MAILER_HOST=smtp.gmail.com
      - SYMFONY__ENV__MAILER_USER={{ HC_DEFAULT_EMAIL }}
      - SYMFONY__ENV__MAILER_PASSWORD={{ HC_DEFAULT_EMAIL_PASS }}
      - SYMFONY__ENV__FROM_EMAIL=wallabag@example.com
      - SYMFONY__ENV__DOMAIN_NAME=https://wallabag.{{ domain_name }}
      - SYMFONY__ENV__SERVER_NAME="Your wallabag instance"
    ports:
      - "8765:80"
    volumes:
      - /mnt/ssd/wallabag/data:/var/www/wallabag/web/assets/images
    healthcheck:
      test: ["CMD", "wget" ,"--no-verbose", "--tries=1", "--spider", "http://localhost"]
      interval: 1m
      timeout: 3s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wallabag-secure.entrypoints=web-secure"
      - "traefik.http.routers.wallabag-secure.rule=Host(`wallabag.{{ domain_name }}`)"
      - "traefik.http.routers.wallabag-secure.tls=true"
      - "traefik.http.routers.wallabag-secure.service=wallabag"
      - "traefik.http.services.wallabag.loadbalancer.server.port=8765"
      - "traefik.docker.network=proxy"
    depends_on:
      - wallabag-db
      - wallabag-redis
    <<: *loki

  wallabag-db:
    image: mariadb
    restart: unless-stopped
    container_name: wallabag_db
    environment:
      - MYSQL_ROOT_PASSWORD={{ WALLABAG_DB_ROOT_PASS }}
    volumes:
      - /mnt/ssd/wallabag/db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 20s
      timeout: 3s
    <<: *loki

  wallabag-redis:
    image: redis:alpine
    restart: unless-stopped
    container_name: wallabag_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      timeout: 3s
    <<: *loki

################# SYNCTHING ##################
  syncthing:
    image: ghcr.io/linuxserver/syncthing:{{ syncthing_ver }}
    container_name: syncthing
    hostname: syncthing #optional
    networks:
      - traefik
    volumes:
      - ./syncthing/config:/config
      - /mnt/syncthing/Mate-20:/mnt/mate20
    ports:
      - 8384:8384
      - 22000:22000/tcp
      - 22000:22000/udp
      - 21027:21027/udp
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.syncthing.entrypoints=web-secure"
      - "traefik.http.routers.syncthing.rule=Host(`syncthing.{{ domain_name }}`)"
      - "traefik.http.middlewares.syncthing-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.syncthing.middlewares=syncthing-https-redirect"
      - "traefik.http.routers.syncthing-secure.entrypoints=web-secure"
      - "traefik.http.routers.syncthing-secure.rule=Host(`syncthing.{{ domain_name }}`)"
      - "traefik.http.routers.syncthing-secure.tls=true"
      - "traefik.http.routers.syncthing-secure.service=syncthing"
      - "traefik.http.services.syncthing.loadbalancer.server.port=8384"
      - "traefik.docker.network=traefik"
    <<: *loki
    
################# PHOTOVIEW ##################
  photoview-db:
    image: mariadb:10.5
    container_name: photoview-db
    restart: always
    environment:
      - MYSQL_DATABASE={{ PHOTOVIEW_DB_NAME }}
      - MYSQL_USER={{ PHOTOVIEW_DB_USER }}
      - MYSQL_PASSWORD={{ PHOTOVIEW_DB_PASS }}
      - MYSQL_RANDOM_ROOT_PASSWORD={{ PHOTOVIEW_DB_ROOT_PASS }}
    volumes:
      - ./photoview/db_data:/var/lib/mysql

  photoview:
    image: viktorstrate/photoview:{{ photoview_ver }}
    container_name: photoview
    restart: always
    ports:
      - "8009:80"
    depends_on:
      - photoview-db
    environment:
      - PHOTOVIEW_DATABASE_DRIVER=mysql
      - PHOTOVIEW_MYSQL_URL=photoview:{{ PHOTOVIEW_DB_PASS }}@tcp(photoview-db)/photoview
      - PHOTOVIEW_LISTEN_IP=photoview
      - PHOTOVIEW_LISTEN_PORT=80
      - PHOTOVIEW_MEDIA_CACHE=/app/cache
      # Optional: If you are using Samba/CIFS-Share and experience problems with "directory not found"
      # Enable the following Godebug
      # - GODEBUG=asyncpreemptoff=1
      # Optional: To enable map related features, you need to create a mapbox token.
      # A token can be generated for free here https://account.mapbox.com/access-tokens/
      # It's a good idea to limit the scope of the token to your own domain, to prevent others from using it.
      # - MAPBOX_TOKEN=<YOUR TOKEN HERE>

    volumes:
      - ./photoview/api_cache:/app/cache
      # Change This: to the directory where your photos are located on your server.
      # If the photos are located at `/home/user/photos`, then change this value
      # to the following: `/home/user/photos:/photos:ro`.
      # You can mount multiple paths, if your photos are spread across multiple directories.
      - /mnt/photos:/photos:ro


networks:
  traefik:
    external: true
